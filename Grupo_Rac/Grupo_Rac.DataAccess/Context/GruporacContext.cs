// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Grupo_Rac.Entities.Entity;

#nullable disable

namespace Grupo_Rac.DataAccess.Context
{
    public partial class GruporacContext : DbContext
    {
        public GruporacContext()
        {
        }

        public GruporacContext(DbContextOptions<GruporacContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbCiudades> tbCiudades { get; set; }
        public virtual DbSet<tbClientes> tbClientes { get; set; }
        public virtual DbSet<tbCompras> tbCompras { get; set; }
        public virtual DbSet<tbDepartamento> tbDepartamento { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbMarcas> tbMarcas { get; set; }
        public virtual DbSet<tbModelos> tbModelos { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallas_PorRoles> tbPantallas_PorRoles { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSedes> tbSedes { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbVehiculos> tbVehiculos { get; set; }
        public virtual DbSet<tbVentasDetalle> tbVentasDetalle { get; set; }
        public virtual DbSet<tbVentasEnc> tbVentasEnc { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.Crg_ID)
                    .HasName("PK__tbCargos__E32B1FA9ADEF6B22");

                entity.ToTable("tbCargos", "Gral");

                entity.Property(e => e.Crg_Descripcion)
                    .HasMaxLength(60)
                    .IsUnicode(false);

                entity.Property(e => e.Crg_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Crg_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Crg_CreacionNavigation)
                    .WithMany(p => p.tbCargosCrg_CreacionNavigation)
                    .HasForeignKey(d => d.Crg_Creacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Crg_Creacion");

                entity.HasOne(d => d.Crg_ModificaNavigation)
                    .WithMany(p => p.tbCargosCrg_ModificaNavigation)
                    .HasForeignKey(d => d.Crg_Modifica)
                    .HasConstraintName("FK_Crg_Modifica");
            });

            modelBuilder.Entity<tbCiudades>(entity =>
            {
                entity.HasKey(e => e.Ciu_Id)
                    .HasName("PK__tbCiudad__0BCBD86D63F93A58");

                entity.ToTable("tbCiudades", "Gral");

                entity.Property(e => e.Ciu_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Ciu_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Ciu_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Ciu_CreacionNavigation)
                    .WithMany(p => p.tbCiudadesCiu_CreacionNavigation)
                    .HasForeignKey(d => d.Ciu_Creacion)
                    .HasConstraintName("FK_Ciu_Creacion");

                entity.HasOne(d => d.Ciu_ModificaNavigation)
                    .WithMany(p => p.tbCiudadesCiu_ModificaNavigation)
                    .HasForeignKey(d => d.Ciu_Modifica)
                    .HasConstraintName("FK_Ciu_Modifica");

                entity.HasOne(d => d.Dep)
                    .WithMany(p => p.tbCiudades)
                    .HasForeignKey(d => d.Dep_Id);
            });

            modelBuilder.Entity<tbClientes>(entity =>
            {
                entity.HasKey(e => e.Cli_Id)
                    .HasName("PK__tbClient__83531C7AFA045406");

                entity.ToTable("tbClientes", "Gral");

                entity.Property(e => e.Cli_DNI)
                    .HasMaxLength(13)
                    .IsUnicode(false);

                entity.Property(e => e.Cli_Direccion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Cli_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Cli_Fecha_Modifica).HasColumnType("date");

                entity.Property(e => e.Cli_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.HasOne(d => d.Ciu)
                    .WithMany(p => p.tbClientes)
                    .HasForeignKey(d => d.Ciu_Id);

                entity.HasOne(d => d.Cli_CreacionNavigation)
                    .WithMany(p => p.tbClientesCli_CreacionNavigation)
                    .HasForeignKey(d => d.Cli_Creacion)
                    .HasConstraintName("FK_Com_Creacion");

                entity.HasOne(d => d.Cli_ModificaNavigation)
                    .WithMany(p => p.tbClientesCli_ModificaNavigation)
                    .HasForeignKey(d => d.Cli_Modifica)
                    .HasConstraintName("FK_Com_Modifica");
            });

            modelBuilder.Entity<tbCompras>(entity =>
            {
                entity.HasKey(e => e.Com_Id)
                    .HasName("PK__tbCompra__D85628CCB40790D9");

                entity.ToTable("tbCompras", "Vent");

                entity.Property(e => e.Com_Fecha).HasColumnType("date");

                entity.Property(e => e.Com_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Com_Fecha_Modifica).HasColumnType("date");

                entity.Property(e => e.Com_Precio).HasColumnType("numeric(8, 2)");

                entity.HasOne(d => d.Cli)
                    .WithMany(p => p.tbCompras)
                    .HasForeignKey(d => d.Cli_Id);

                entity.HasOne(d => d.Com_CreacionNavigation)
                    .WithMany(p => p.tbComprasCom_CreacionNavigation)
                    .HasForeignKey(d => d.Com_Creacion)
                    .HasConstraintName("FK_Com_Creacion");

                entity.HasOne(d => d.Com_ModificaNavigation)
                    .WithMany(p => p.tbComprasCom_ModificaNavigation)
                    .HasForeignKey(d => d.Com_Modifica)
                    .HasConstraintName("FK_Com_Modifica");
            });

            modelBuilder.Entity<tbDepartamento>(entity =>
            {
                entity.HasKey(e => e.Dep_Id)
                    .HasName("PK__tbDepart__0C2B452D7246B2C3");

                entity.ToTable("tbDepartamento", "Gral");

                entity.Property(e => e.Dep_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Dep_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Dep_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Dep_CreacionNavigation)
                    .WithMany(p => p.tbDepartamentoDep_CreacionNavigation)
                    .HasForeignKey(d => d.Dep_Creacion)
                    .HasConstraintName("FK_Dep_Creacion");

                entity.HasOne(d => d.Dep_ModificaNavigation)
                    .WithMany(p => p.tbDepartamentoDep_ModificaNavigation)
                    .HasForeignKey(d => d.Dep_Modifica)
                    .HasConstraintName("FK_Dep_Modifica");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.Est_ID)
                    .HasName("PK__tbEstado__345473DCA48E4C55");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.Property(e => e.Est_Descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Est_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Est_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Est_UsuCreNavigation)
                    .WithMany(p => p.tbEstadosCivilesEst_UsuCreNavigation)
                    .HasForeignKey(d => d.Est_UsuCre)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Est_UsuCre");

                entity.HasOne(d => d.Est_UsuModiNavigation)
                    .WithMany(p => p.tbEstadosCivilesEst_UsuModiNavigation)
                    .HasForeignKey(d => d.Est_UsuModi)
                    .HasConstraintName("FK_Est_UsuModi");
            });

            modelBuilder.Entity<tbMarcas>(entity =>
            {
                entity.HasKey(e => e.Mar_Id)
                    .HasName("PK__tbMarcas__4F38F12834D06BF5");

                entity.ToTable("tbMarcas", "Gral");

                entity.Property(e => e.Mar_Descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.Mar_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Mar_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Mar_CreacionNavigation)
                    .WithMany(p => p.tbMarcasMar_CreacionNavigation)
                    .HasForeignKey(d => d.Mar_Creacion)
                    .HasConstraintName("FK_Mar_Creacion");

                entity.HasOne(d => d.Mar_ModificaNavigation)
                    .WithMany(p => p.tbMarcasMar_ModificaNavigation)
                    .HasForeignKey(d => d.Mar_Modifica)
                    .HasConstraintName("FK_Mar_Modifica");
            });

            modelBuilder.Entity<tbModelos>(entity =>
            {
                entity.HasKey(e => e.Mod_Id)
                    .HasName("PK__tbModelo__D5F2725B53C5C44B");

                entity.ToTable("tbModelos", "Gral");

                entity.Property(e => e.Mod_Año).HasColumnType("date");

                entity.Property(e => e.Mod_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Mod_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Mod_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Mar)
                    .WithMany(p => p.tbModelos)
                    .HasForeignKey(d => d.Mar_Id);

                entity.HasOne(d => d.Mod_CreacionNavigation)
                    .WithMany(p => p.tbModelosMod_CreacionNavigation)
                    .HasForeignKey(d => d.Mod_Creacion)
                    .HasConstraintName("FK_Mod_Creacion");

                entity.HasOne(d => d.Mod_ModificaNavigation)
                    .WithMany(p => p.tbModelosMod_ModificaNavigation)
                    .HasForeignKey(d => d.Mod_Modifica)
                    .HasConstraintName("FK_Mod_Modifica");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.Ptl_Id)
                    .HasName("PK__tbPantal__13B93AA9E90B8678");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.Ptl_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Ptl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Ptl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.Ptl_Identificador)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.HasOne(d => d.Ptl_CreacionNavigation)
                    .WithMany(p => p.tbPantallasPtl_CreacionNavigation)
                    .HasForeignKey(d => d.Ptl_Creacion)
                    .HasConstraintName("FK_Ptl_Creacion");

                entity.HasOne(d => d.Ptl_ModificaNavigation)
                    .WithMany(p => p.tbPantallasPtl_ModificaNavigation)
                    .HasForeignKey(d => d.Ptl_Modifica)
                    .HasConstraintName("FK_Ptl_Modifica");
            });

            modelBuilder.Entity<tbPantallas_PorRoles>(entity =>
            {
                entity.HasKey(e => e.PaR_Id)
                    .HasName("PK__tbPantal__585DC13CD071BDCD");

                entity.ToTable("tbPantallas_PorRoles", "Acce");

                entity.Property(e => e.PaR_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.PaR_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.PaR_CreacionNavigation)
                    .WithMany(p => p.tbPantallas_PorRolesPaR_CreacionNavigation)
                    .HasForeignKey(d => d.PaR_Creacion)
                    .HasConstraintName("FK_PaR_Creacion");

                entity.HasOne(d => d.PaR_ModificaNavigation)
                    .WithMany(p => p.tbPantallas_PorRolesPaR_ModificaNavigation)
                    .HasForeignKey(d => d.PaR_Modifica)
                    .HasConstraintName("FK_PaR_Modifica");

                entity.HasOne(d => d.Ptl)
                    .WithMany(p => p.tbPantallas_PorRoles)
                    .HasForeignKey(d => d.Ptl_Id)
                    .HasConstraintName("FK_tbPantallas_PorRoles_tbPantallas");

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbPantallas_PorRoles)
                    .HasForeignKey(d => d.Rol_Id)
                    .HasConstraintName("FK_tbPantallas_PorRoles_tbRoles");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.Rol_Id)
                    .HasName("PK__tbRoles__795EBD49D6D92989");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.Rol_Descripcion)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Rol_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.Rol_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.Rol_CreacionNavigation)
                    .WithMany(p => p.tbRolesRol_CreacionNavigation)
                    .HasForeignKey(d => d.Rol_Creacion)
                    .HasConstraintName("FK_Rol_Creacion");

                entity.HasOne(d => d.Rol_ModificaNavigation)
                    .WithMany(p => p.tbRolesRol_ModificaNavigation)
                    .HasForeignKey(d => d.Rol_Modifica)
                    .HasConstraintName("FK_Rol_Modifica");
            });

            modelBuilder.Entity<tbSedes>(entity =>
            {
                entity.HasKey(e => e.Sed_Id)
                    .HasName("PK__tbSedes__FCECF53E32DDA472");

                entity.ToTable("tbSedes", "Gral");

                entity.Property(e => e.Sed_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Sed_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Sed_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Ciu)
                    .WithMany(p => p.tbSedes)
                    .HasForeignKey(d => d.Ciu_Id);

                entity.HasOne(d => d.Sed_CreacionNavigation)
                    .WithMany(p => p.tbSedesSed_CreacionNavigation)
                    .HasForeignKey(d => d.Sed_Creacion)
                    .HasConstraintName("FK_Sed_Creacion");

                entity.HasOne(d => d.Sed_ModificaNavigation)
                    .WithMany(p => p.tbSedesSed_ModificaNavigation)
                    .HasForeignKey(d => d.Sed_Modifica)
                    .HasConstraintName("FK_Sed_Modifica");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.Usu_ID)
                    .HasName("PK__tbUsuari__B6173FEB61162768");

                entity.ToTable("tbUsuarios", "Acce");

                entity.Property(e => e.Usu_Apellido)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usu_FechaCreacion).HasColumnType("date");

                entity.Property(e => e.Usu_FechaModifica).HasColumnType("date");

                entity.Property(e => e.Usu_FechaNacimiento).HasColumnType("datetime");

                entity.Property(e => e.Usu_Nombre)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.Usu_Sexo)
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.Usu_Telefono)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.Usu_Usua)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.HasOne(d => d.Crg)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Crg_Id)
                    .HasConstraintName("FK_tbUsuarios_tbCargos_Crg_ID");

                entity.HasOne(d => d.Est)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Est_Id)
                    .HasConstraintName("FK_tbUsuarios_tbEstadosCiviles_Est_ID");

                entity.HasOne(d => d.Rol)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Rol_Id)
                    .HasConstraintName("FK_tbUsuarios_tbrRoles_Rol_Id");

                entity.HasOne(d => d.Sed)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.Sed_Id);

                entity.HasOne(d => d.Usu_UsuCreNavigation)
                    .WithMany(p => p.InverseUsu_UsuCreNavigation)
                    .HasForeignKey(d => d.Usu_UsuCre)
                    .HasConstraintName("FK_tbUsuarios_tbUsuarios_Usu_ID");

                entity.HasOne(d => d.Usu_UsuModiNavigation)
                    .WithMany(p => p.InverseUsu_UsuModiNavigation)
                    .HasForeignKey(d => d.Usu_UsuModi);
            });

            modelBuilder.Entity<tbVehiculos>(entity =>
            {
                entity.HasKey(e => e.Veh_Placa)
                    .HasName("PK__tbVehicu__0303BEDC3CB4F9D0");

                entity.ToTable("tbVehiculos", "Vent");

                entity.Property(e => e.Veh_Placa)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.Property(e => e.Com_Precio).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Veh_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.Veh_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Com)
                    .WithMany(p => p.tbVehiculos)
                    .HasForeignKey(d => d.Com_Id);

                entity.HasOne(d => d.Mod)
                    .WithMany(p => p.tbVehiculos)
                    .HasForeignKey(d => d.Mod_Id);

                entity.HasOne(d => d.Sed)
                    .WithMany(p => p.tbVehiculos)
                    .HasForeignKey(d => d.Sed_Id);

                entity.HasOne(d => d.Veh_CreacionNavigation)
                    .WithMany(p => p.tbVehiculosVeh_CreacionNavigation)
                    .HasForeignKey(d => d.Veh_Creacion)
                    .HasConstraintName("FK_Veh_Creacion");

                entity.HasOne(d => d.Veh_ModificaNavigation)
                    .WithMany(p => p.tbVehiculosVeh_ModificaNavigation)
                    .HasForeignKey(d => d.Veh_Modifica)
                    .HasConstraintName("FK_Veh_Modifica");
            });

            modelBuilder.Entity<tbVentasDetalle>(entity =>
            {
                entity.HasKey(e => e.VeD_Id)
                    .HasName("PK__tbVentas__9D96BDD953C769F1");

                entity.ToTable("tbVentasDetalle", "Vent");

                entity.Property(e => e.VeD_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.VeD_Fecha_Modifica).HasColumnType("date");

                entity.Property(e => e.VeD_Precio).HasColumnType("numeric(8, 2)");

                entity.Property(e => e.Veh_Placa)
                    .HasMaxLength(7)
                    .IsUnicode(false);

                entity.HasOne(d => d.VeD_CreacionNavigation)
                    .WithMany(p => p.tbVentasDetalleVeD_CreacionNavigation)
                    .HasForeignKey(d => d.VeD_Creacion)
                    .HasConstraintName("FK_VeD_Creacion");

                entity.HasOne(d => d.VeD_ModificaNavigation)
                    .WithMany(p => p.tbVentasDetalleVeD_ModificaNavigation)
                    .HasForeignKey(d => d.VeD_Modifica)
                    .HasConstraintName("FK_VeD_Modifica");

                entity.HasOne(d => d.VeE)
                    .WithMany(p => p.tbVentasDetalle)
                    .HasForeignKey(d => d.VeE_Id);

                entity.HasOne(d => d.Veh_PlacaNavigation)
                    .WithMany(p => p.tbVentasDetalle)
                    .HasForeignKey(d => d.Veh_Placa);
            });

            modelBuilder.Entity<tbVentasEnc>(entity =>
            {
                entity.HasKey(e => e.VeE_Id)
                    .HasName("PK__tbVentas__E55425E2AFBCDE22");

                entity.ToTable("tbVentasEnc", "Vent");

                entity.Property(e => e.VeE_Fecha).HasColumnType("date");

                entity.Property(e => e.VeE_Fecha_Creacion).HasColumnType("date");

                entity.Property(e => e.VeE_Fecha_Modifica).HasColumnType("date");

                entity.HasOne(d => d.Cli)
                    .WithMany(p => p.tbVentasEnc)
                    .HasForeignKey(d => d.Cli_Id);

                entity.HasOne(d => d.Sed)
                    .WithMany(p => p.tbVentasEnc)
                    .HasForeignKey(d => d.Sed_Id);

                entity.HasOne(d => d.VeE_CreacionNavigation)
                    .WithMany(p => p.tbVentasEncVeE_CreacionNavigation)
                    .HasForeignKey(d => d.VeE_Creacion)
                    .HasConstraintName("FK_VeE_Creacion");

                entity.HasOne(d => d.VeE_ModificaNavigation)
                    .WithMany(p => p.tbVentasEncVeE_ModificaNavigation)
                    .HasForeignKey(d => d.VeE_Modifica)
                    .HasConstraintName("FK_VeE_Modifica");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}